StreamSets 20240424

https://fastcampus.co.kr/story_article_snowflake2 - 기본 개념 참조 
https://kkimsangheon.github.io/2020/01/07/streamsets4/ - Stream Set 간단 개요

-1번 Session 

Plan/Work Through : Explain for Stream Sets
	
스트림 세트의 역할, 활용 예제, 필요 대상
StreamSets 플랫폼은 엔지니어가 하이브리드 및 멀티 클라우드 아키텍처 전반에 걸쳐 
데이터 통합을 강화하는 데 필요한 스마트 데이터 파이프라인을 구축하고 실행할 수 있도록 지원합니다. 

iPaaS(Integration Platform as a Service): 위치에 관계없이 모든 애플리케이션과 데이터를 통합하고 연결할 수 있는 직관적인 모듈식 접근 방식
EDA(이벤트 기반 아키텍처): https://aws.amazon.com/ko/what-is/eda/:이벤트 기반 아키텍처(EDA)는 이벤트를 게시, 소비 또는 라우팅하는 분리된 소형 서비스에서 구축된 현대적 아키텍처 패턴입니다.
	이벤트란 상태 변경 또는 업데이트를 뜻합니다. 예를 들어 장바구니에 들어간 품목, 스토리지 시스템에 업로드된 파일, 배송 준비된 주문이 이에 해당합니다. 
	이벤트는 상태(주문 내의 품목 이름, 가격, 수량 등)를 전달할 수도 있고, 관련 정보를 조회하는 데 필요한 식별자(예: ‘주문 #8942가 배송됨’)를 포함하기만 할 수도 있습니다.
	기존의 요청 기반 모델과 달리 EDA는 생산자와 소비자 서비스 간의 느슨한 결합을 촉진합니다. 이를 통해 시스템의 개별 구성 요소에 대해 확장, 업데이트, 독립적인 배포가 쉬워집니다.
Compostable architecture : https://alokai.com/blog/composable-architecture
컴포저블 아키텍처 는 개발자가 재사용 가능한 구성 요소를 만들어 애플리케이션을 더 빠르고 쉽게 구축할 수 있도록 하는 디자인 패턴입니다.

고객에게 생산성 측면 개선 기대, B2B 등을 도입 가능
이걸 관리할 수 있는 공통 플랫폼 및 UI 도입 가능 
공통 플랫폼엔 AI를 도입해 Business 사용자가 편하게 사용할 수 있게 함

주요 Topic:
1. Data - Critical success factor in achieving strategic goals 
- 전략적 목표 달성에 대한 중요한 성공 요인 
고객에게 최적화된 데이터 제공하기 
데이터 전략 수립

Data - Growing demand for real-time analytics
- 실시간 분석에 대한 고객의 수요 증가
고객들은 데이터를 실시간으로 얻기 위해 직접 접근 방식을 취함 
앱 to 앱, 데이터 to 데이터/legacy 등 혹은 직접 스크립트를 넣어서 코딩하는 등 직접 프레임워크를 만들었다.
하지만 이는 적절한 전략이나 프레임워크가 마련되어 있지 않으면 위험하다.
이를 위해 데이터 프레임워크나 아키텍쳐의 중요성이 높아짐.
하지만 이를 구축하기 위한 비용과 난이도가 높다
이를 위해 데이터를 통합하고 이를 관리하기 위한 플랫폼을 만들었다 

데이터 통합의 중요성:
정의 - 데이터 통합은 조직 전반에 걸쳐 모든 소스의 다양한 유형과 형식의 데이터를 데이터 레이크 또는 
데이터 웨어하우스에 결합하여 분석을 위한 통합된 사실 기반을 제공합니다.

데이터를 한 시스템에서 다른 시스템으로 이동하려면 데이터의 구조와 의미를 이해하고 기술 시스템을 통해 
이동하는 경로를 정의하는 데이터 파이프라인이 필요합니다.

데이터 통합에는 데이터를 최종 목적지에서 사용할 수 있도록 준비하기 위한 정리, 정렬, 강화 및 기타 프로세스가 포함될 수도 있습니다.

webMethods and StreamSets 
webMethods는 Application Integration,
Streamset은 Data Integration 

WM은 웹 플랫폼, 어플리케이션, 채널 등등을 통해 서비스를 제공
-> 그럼 StreamSet은?

wM은 이미 구성된 데이터 source, lake, warehouse에서 어플리 케이션 간 데이터 교환 등을 위해 구성하는 것이고
Stream Set은 원시 상태의 데이터를 추출 분석 및 가공하는 단계에서 활용되는 파이프라인 플랫폼이다

데이터 엔지니어들의 고민 -> 나날이 증가하는 데이터의 양, 변화하는 내용, 유지보수 비용, 이를 포괄할 수 있는 플랫폼을 구성하는데 들어가는 비싼 비용
이를 관리하기 위한 Tool은 너무 복잡하거나, 너무 단순해서 문제
기술이 변경되면 플랫폼이 변경되어야 하는데, 비용이 너무 비싸다

Stream Set은 이를 관리하기 위한 파이프 라인을 중심으로 생태계 구축
이를 위한 이점?
파이프 라인의 재사용 가능 
파이프 라인의 활동을 보여주는 UI

ex: 
ERP(전사적 자원 관리), CRM(고객 관계 관리), SCM(공급망 관리), HRM(인적 자원 관리)
일반적으로 데이터의 가치를 얻으려면 결합해야 한다. 이를 위해 분석이 필요 
데이터 소스에서 수집된 데이터 -> 데이터 분류 및 분석 -> 데이터 가공 및 변형(요구사항 및 비즈니스 규칙에 따라) -> 데이터 이동
데이터 이동 방법에 대한 패턴
1. Batch : 작업 시작시 데이터가 복사, 작업 완료시 배치 완료, 특정 시간에 예약 가능
2. Streaming : 항상 실행될 수 있는 파이프라인, 카프카(실제로는 스트리밍 되는 레코드)에서 정보를 수집할 수도 있다, 항상 파이프라인 사용
3. CDC(CDC는 Change Data Capture의 약자로 소스 DB의 로그 파일을 분석해 변경된 데이터를 추출하는 기술입니다) 
: 변화를 수용, 소스에서 발생, ex:oracle, 이러한 변경 사항을 추출해 다른 곳으로 옮길 수 있음
 
이전에는 오라클과 같은 ETL 방식을 사용했지만, 장치데이터 로그데이터 등 다양한 데이터와 구조가 생기면서 현대적인 ETL 솔루션이 필요해짐 
오라클은 온프레미스 환경이므로, AWS 등 클라우드 환경으로 이동하는 추세 

사용자는 더 이상 대쉬보드만을 원하지 않고, 인사이트 분석을 직접 하고 싶어함 
이를 위해 채워야할 요구사항의 option set이 증가함, 이를 위해 도구를 선택해야 하지만 
각 Vendor가 제공하는 방식은 매우 어렵다.
Streamset은 이를 위해 다양한 ETL의 요구사항을 갖춰 ETL Connector의 기초가 되려함 

Stream set의 실제 기능 
2가지 구성 요소 

1) data plane: 고객이 소유, 출발로부터 목적지까지 고객 환경 내의 Stream Set에 유지됨 
이는 외부로의 거래가 노출되지 않음을 의미함, 보안성 증대 
엔진(소스에서 데이터를 이동하는 것이 임무)이 고객 데이터 영역 내에 구축, 소스에서 데이터를 변환할 수 있고 목적지로 이동, 
엔진을 고객의 data plane 이며, control hub는 무엇인가?

**control plane : 소프트웨어 Ag에 의해 관리 됨, 클라우드에 있고, 전세계에 구성할 수 있는 pods 보유, 파이프라인을 설계 및 배포, 모니터링할 수 있는 영역이 
바로 Control plane에 있다. 

2) customer plane :


Stream Set 장점 : 사용하기 편함, 구축하는데 시간이 많이 안필요함 
사용자 그래픽 인터페이스가 멋지고 현대적인 UI라 핵심 기능임 
데이터 플레인이 왜 존재하는지 이해하는 것, 컨트롤 플레인의 중요성 
고객 아키텍처를 위한 하이브리드 Saas 모델의 아키텍처(매우 현대적인 아키텍쳐) 제공 가능

Batch 스트리밍 가능 및 CDC 모두 동일한 제품 ,동일한 UI에 있다.
따라서 익숙해지면 신속히 구축할 수 있다.
Batch Streaming & CDC PipeLine

스트림 시스템의 하이퍼 스케일러에 구애받지 않는다
	(하이퍼스케일러(hyperscaler)란 대규모 클라우드 서비스 공급업체로, 
	컴퓨팅 및 스토리지와 같은 서비스를 엔터프라이즈 규모로 제공할 수 있습니다. 
	하이퍼스케일러를 구분하는 보편적인 기준은 없지만 
	Amazon Web Services, Google Cloud, Microsoft Azure, IBM Cloud, Alibaba Cloud
	와 같은 주요 클라우드 공급업체가 이러한 설명에 부합합니다.)
온프레미스에서 어느 곳이든 데이터를 이동할 수 있다. 

사례:
데이터 수집 : 자동차 정보를 파이프라인을 구성해 수익성 증대를 위한 전략과 의사 결정 
프로세스 최적화 : 데이터 수집기로 급여 명세서 데이터 가져옴, 이를 변환해 카프카에 저장, 이를 SAP 대상에 전송
분석 후 서비스 제공 : 대학교의 일정, 학생들 대상 CRM 구성 등 
현대화 : 에너지 회사의 현대화를 위해 측정한 데이터를 온프레미스에서 클라우드로의 이동, 이를 통해 운영과 비즈니스 의견 결정, 데이터베이스 구성하는데 도움 줌
마이그레이션 및 동기화


StreamSets 20240430

Data Team 직무 예제 
대략적인 데이터의 흐름 
Data source --Streaming/CDC/Batching--> Object Store/Landing Zone, EventHub --ETL/ELT/Reverse ETL--> Data Warehouses, Data Lake, Database

StreamSet의 Platform Sections
Set up/Build/Run/Manage/Monitor
